# To use this file, run `docker-compose up`.
version: "3.4"

x-backend-config: &backend
  image: hotosm-tasking-manager:backend
  env_file: ${ENV_FILE:-tasking-manager.env}
  depends_on:
    - postgresql
  links:
    - postgresql
  networks:
    kobofe_kobo-fe-network:
      aliases:
        - tm_backend

services:
  # Main application
  backend:
    <<: *backend
    container_name: backend
    restart: always
    labels:
      - traefik.http.routers.backend.rule=Host(`http://tmb.variamos.com/`) && PathPrefix(`/api/`)
      - traefik.http.services.backend.loadbalancer.server.port=5000
    ports:
      - "5000:5000"
  migration:
    <<: *backend
    container_name: migration
    restart: on-failure
    command: python manage.py db upgrade

  frontend:
    image: hotosm-tasking-manager:frontend
    restart: always
    networks:
      kobofe_kobo-fe-network:
        aliases:
          - tm_frontend

    ports:
      - "3000:80"
    labels:
      - traefik.http.routers.frontend.rule=Host(`http://tmf.variamos.com/:3000`)
      - traefik.http.services.frontend.loadbalancer.server.port=80

  postgresql:
    image: mdillon/postgis:11
    container_name: postgresql
    restart: always
    env_file: ${ENV_FILE:-tasking-manager.env}
    networks:
      kobofe_kobo-fe-network:
        aliases:
          - tm_postgresql

  traefik:
    image: traefik:v2.3
    restart: always
    ports:
      - "8080:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - --entrypoints.web.address=:80
      - --providers.docker=true
    networks:
      kobofe_kobo-fe-network:
        aliases:
          - tm_traefik

networks:
  kobofe_kobo-fe-network:
    external: true

